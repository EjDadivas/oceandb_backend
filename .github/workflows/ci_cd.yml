name: Lint, Test, Build, Push, Deploy.

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - 'feature/**'

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel pre-commit
      - name: Linting
        run: make linting

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Test
        uses: packetcoders/action-setup-cache-python-poetry@main
        with:
          python-version: 3.11
          poetry-version: 1.6.1

      - name: Run tests
        run: |
          poetry install
          make test

  build_and_push:
    name: Push Docker image to Hub
    runs-on: ubuntu-latest
    needs: [ linting, test ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: oceandb/backend
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: oceandb/backend:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build_and_push ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: copy file via ssh key
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: "docker-compose.yml, nginx/nginx.conf"
          target: .
      - name: run docker-compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            docker compose down
            docker rmi -f $(docker images -q)
            docker compose pull
            docker compose up -d
